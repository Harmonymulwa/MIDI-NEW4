name: Plugin build (OSX)

on: workflow_dispatch

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set Default Scheme
        run: |
          cd Builds/MacOSX
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          echo $default | cat >default
          echo Using default scheme: $default
      - name: Build
        env:
          scheme: ${{ 'default' }}
        run: |
          cd Builds/MacOSX
          if [ $scheme = default ]; then scheme=$(cat default); fi
          if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
          file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
          xcodebuild clean build analyze -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -configuration Release | xcpretty && exit ${PIPESTATUS[0]}
      - name: make artifact folder
        run: |
          cd Builds/MacOSX && mkdir Artifacts && mv build/Release/Arpligner.app Artifacts && mv build/Release/Arpligner.vst3 Artifacts && mv build/Release/Arpligner.lv2 Artifacts
      - name: upload artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: arpligner-build-osx
          path: Builds/MacOSX/Artifacts

      - name: release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          files: Builds/MacOSX/Artifacts/*
          generate_release_notes: true
